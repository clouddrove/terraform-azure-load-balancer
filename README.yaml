---
#
# This is the canonical configuration for the `README.md`
# Run `make readme` to rebuild the `README.md`
#


# Name of this project
name: Terraform AZURE LOAD-BALANCER

# License of this project
license: "APACHE"

# Canonical GitHub repo
github_repo: clouddrove/terraform-azure-load-balancer

# Badges to display
badges:
  - name: "Terraform"
    image: "https://img.shields.io/badge/Terraform-v1.1.7-green"
    url: "https://www.terraform.io"
  - name: "Licence"
    image: "https://img.shields.io/badge/License-APACHE-blue.svg"
    url: "LICENSE.md"

#  description of this project
description: |-
  Terraform module to create LOAD-BALANCER resource on AZURE.

# extra content
include:
  - "terraform.md"

# How to use this project
# yamllint disable rule:line-length
usage: |-
  ### Simple Example
  Here is an example of how you can use this module in your inventory structure:
    ```hcl
    module "load-balancer" {
      source      = "clouddrove/load-balancer/azure"
      version     = "1.0.0"
      name        = "example"
      environment = "test"
      label_order = ["name","environment"]

      #   Common
      ip_count            = 1
      enabled             = true
      resource_group_name = module.resource_group.resource_group_name
      location            = module.resource_group.resource_group_location

      # Existing Network Interface
      network_interace_id = "" ## If Existing Network Interface is allocated then assign value here. e.g. azurerm_network_interface.default[0].id ,azurerm_virtual_machine.example.network_interface_ids[0]

      # Load Balancer
      frontend_name                          = "mypublicIP"
      frontend_private_ip_address_allocation = "Static"
      frontend_private_ip_address            = "10.0.1.6"
      lb_sku                                 = "Standard"

      #   Public IP
      allocation_method = "Static"
      sku               = "Standard"
      nat_protocol      = "Tcp"
      public_ip_enabled = true
      ip_version        = "IPv4"

      # Backend Pool
      is_enable_backend_pool              = false
      network_interaface_id_association   = ""
      ip_configuration_name_association   = ""

      remote_port = {
        ssh = ["Tcp", "22"]
      }

      lb_port = {
        http  = ["80", "Tcp", "80"]
        https = ["443", "Tcp", "443"]
      }

      lb_probe = {
        http  = ["Tcp", "80", ""]
        http2 = ["Http", "1443", "/"]
      }

      depends_on = [module.resource_group]
    }
    ```
